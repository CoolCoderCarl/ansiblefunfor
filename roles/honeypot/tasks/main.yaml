---
###
### --- PRECONFIGURE ---
###

- name: Install required packages
  package:
    name: "{{ item }}"
  with_items:
    - git
    - python3
    - python3-pip
    - python3-virtualenv
    - firewalld
  notify:
    - enable firewall
    - start firewall

- name: Add user cowrie
  user:
    name: cowrie
    comment: Honeypot
    uid: 2000

- name: Firewall allow ssh
  firewalld:
    service: ssh
    permanent: true
    state: enabled
  notify:
    - restart firewall

- name: Firewall allow ports "{{ ports }}"
  firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    state: enabled
  with_items:
    - "{{ ports }}"
  notify:
    - restart firewall

###
### --- COWRIE INSTALLATION & CONFIGURATION --- 
###

- name: Register git cowrie repository
  stat:
    path: "/home/cowrie/cowrie/.git/"
  register: git_cowrie_repo

- name: Git clone
  git: 
    repo: https://github.com/cowrie/cowrie.git
    dest: "{{ git_cowrie_home }}"
    version: master
  become: yes
  become_user: cowrie
  when: git_cowrie_repo.stat.exists != True

- name: Install requirements
  pip:
    requirements: "{{ git_cowrie_home }}/requirements.txt"

- name: Deploy cowrie-bin
  copy:
    src: cowrie-bin
    dest: "{{ git_cowrie_home }}/bin/cowrie"
    owner: cowrie
    group: cowrie
    mode: "0755"

- name: Deploy systemd
  copy:
    src: cowrie-honeypot.service
    dest: "/etc/systemd/system/cowrie-honeypot.service"
    owner: cowrie
    group: cowrie
    mode: "0755"
  notify:
    - enable cowrie
    - start cowrie

- name: Create userdb for connection to cowrie
  copy:
    src: userdb.txt
    dest: "/home/cowrie/cowrie/etc/userdb.txt"
    owner: cowrie
    group: cowrie
    mode: "0644"
  notify:
    - restart cowrie

- name: Create soft link for cowrie logs
  file:
    src: "/home/cowrie/cowrie/var/log/cowrie/cowrie.log"
    dest: "/var/log/cowrie.log"
    owner: cowrie
    group: cowrie
    state: link
    force: yes

###
### --- RECONFIGURE SSH & FIREWALL ---
###

- name: Deploy new ssh configuration
  template:
    src: sshd_config.j2
    dest: "/etc/ssh/sshd_config"
  notify:
    - restart ssh

- name: Configure port forwarding
  firewalld:
    masquerade: yes
    state: enabled
    permanent: yes
  notify:
    - restart firewall

- name: Redirect port 22 to 2222 with Rich Rule
  firewalld:
    rich_rule: rule family=ipv4 forward-port port=22 protocol=tcp to-port=2222
    permanent: yes
    immediate: yes
    state: enabled
  notify:
    - restart firewall

###
### --- SELINUX CONFIGURATION ---
###

- name: Install selinux python packages
  package:
    name: "{{ pckg_selinux }}"
  when: use_selinux

- name: Copy selinux configuration file
  copy:
    src: selinux.conf
    dest: /etc/selinux/config
  when: use_selinux

- name: Allow selinux tcp ports {{ ports }}
  seport:
    ports: "{{ item }}"
    proto: tcp
    setype: ssh_port_t
    state: present
  with_items:
    - "{{ ports }}"
  when: use_selinux